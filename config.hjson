{
   version: 0.6.1.1
   global_modules: false//disables global modules loading (only looks up for modules in cwd)
   minify: true
   inject_CA: true
   cache_dir: .CACHE
   c_libs: {
      eli_fs_extra: "eli.fs.extra"
      eli_proc_extra: "eli.proc.extra"
      eli_env_extra: "eli.env.extra"
      lzip: lzip
      lfetch: lfetch
      is_tty: is_tty
      lmbed_hash: lmbed_hash
   }
   lua_libs: [
      {
         auto: true
         path: lua-modules/hjson
         ignore: .*test.*
      },
      {
         auto: true
         path: lua-modules/lustache/src
      },
      {
         auto: true
         path: lua-modules/argparse/src
      },
      {
         auto: true
         path: lua-modules/eli
         ignore: [ "init.lua", ".*test.*" ]
      } 
   ]
   init: [
      lua-modules/eli/init.lua
   ]
   downloads: [
      {
         id: lua
         repository: lua/lua
         version: v5.4.0
         destination: lua/src
         omitRoot: true
         cmakelists: { source: "lua_CMakeLists.txt", destination: "lua/CMakeLists.txt" } 
      },
      {
         id: eli-lib
         repository: cryon-io/eli-lib
         version: 0.6.1
         destination: lua-modules/eli
         omitRoot: true
      },
      {
         id: is_tty
         repository: cryon-io/lua_is_tty
         version: 0.1.1
         destination: modules/lua_is_tty
         omitRoot: true
      },
      {
         id: mbed_hash
         repository: cryon-io/lua-mbed-hash
         version: 0.1.1
         destination: modules/lua_mbed_hash
         omitRoot: true
      },
      {
         id: eli_fs_extra
         repository: cryon-io/eli-fs-extra
         version: 0.2.2
         destination: modules/eli-fs-extra
         omitRoot: true
      },
      {
         id: eli_proc_extra
         repository: cryon-io/eli-proc-extra
         version: 0.1.4
         destination: modules/eli-proc-extra
         omitRoot: true
      },
      {
         id: eli_env_extra
         repository: cryon-io/eli-env-extra
         version: 0.1.0
         destination: modules/eli-env-extra
         omitRoot: true
      },
      {
         id: lfetch
         repository: cryi/lua-fetch
         version: 0.0.1
         destination: modules/lfetch
         omitRoot: true
      },
      {
         id: lzip
         repository: brimworks/lua-zip
         version: v0.2.0
         destination: modules/lzip
         omitRoot: true
         cmakelists: { source: "lzip_CMakeLists.txt", destination: "modules/lzip/CMakeLists.txt" }
      },
      { 
         id: mbedtls
         repository: ARMmbed/mbedtls  
         version: mbedtls-2.16.3
         destination: modules/mbedtls
         omitRoot: true
      },
      {
         id: zlib
         repository: madler/zlib
         version: v1.2.11
         destination: modules/zlib
         omitRoot: true
      },
      {
         id: libzip
         repository: nih-at/libzip
         version: rel-1-5-2
         destination: modules/libzip
         omitRoot: true
      },
      {
         id: apk-tools
         repository: alpinelinux/apk-tools
         version: v2.10.5
         destination: modules/apk-tools
         omitRoot: true
      },
      {
         id: libfetch-mbedtls-patch
         repository: cryi/libfetch-mbedtls-patch
         version: 0.0.2
         destination: modules/apk-tools/libfetch
         omitRoot: true
         force: true
         clean: false
      },
      {
         id: lustache
         repository: Olivine-Labs/lustache
         version: v1.3.1-0
         destination: lua-modules/lustache
         omitRoot: true
      },
      {
         id: hjson
         repository: cryi/hjson-lua
         version: 0.1.2
         destination: lua-modules/hjson
         omitRoot: true
      },
      {
         id: argparse
         repository: mpeterv/argparse
         version: 0.6.0
         destination: lua-modules/argparse 
         omitRoot: true
      },
      { 
         id: luasrcdiet
         repository: jirutka/luasrcdiet
         version: v1.0.0
         destination: tools/luasrcdiet
         omitRoot: true
      }
   ]
}