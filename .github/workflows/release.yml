name: release

on:
  push:
    branches:
      - main
    
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      NEEDS_RELEASE: ${{ steps.prep.outputs.NEEDS_RELEASE }}
      VERSION: ${{ steps.prep.outputs.VERSION }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: prepare
        id: prep
        shell: sh
        run: |
          PLATFORM=$(uname -m) && echo "::set-output name=PLATFORM::$PLATFORM"
          ROOT=$(pwd) && echo "::set-output name=ROOT::$ROOT"
          rm -rf release .meta
          mkdir -p "$ROOT/release"
          VERSION=$(./eli -e 'io.write(require"hjson".parse(fs.read_file"config.hjson").version)')
          echo "::set-output name=VERSION::$VERSION"
          if git tag -l "$VERSION" | grep "$VERSION"; then 
            echo "Version $VERSION already exists";
          else
            NEEDS_RELEASE=true
            echo "::set-output name=NEEDS_RELEASE::true"
          fi
          echo "Building eli $VERSION (RELEASE_REQUIRE: $NEEDS_RELEASE)"
      
      - name: build
        uses: addnab/docker-run-action@v3
        if: ${{ steps.prep.outputs.NEEDS_RELEASE == 'true'}}
        with:
          image: ghcr.io/alis-is/eli-build:latest
          run: ./eli tools/build.lua
          options: -w /root/luabuild -v ${{ github.workspace }}:/root/luabuild -e TOOLCHAINS=x86_64-linux-musl-cross;i686-linux-musl-cross;aarch64-linux-musl-cross;x86_64-w64-mingw32-cross;i686-w64-mingw32-cross

      - name: Cache release
        uses: actions/cache@v3
        if: ${{ steps.prep.outputs.NEEDS_RELEASE == 'true'}}
        env:
          cache-name: cache-binaries
        with:
          path: ./release
          key: build#${{ github.sha }}

  test-linux:
    if: ${{ needs.build.outputs.NEEDS_RELEASE == 'true'}}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Cache release
        uses: actions/cache@v3
        env:
          cache-name: cache-binaries
        with:
          path: ./release
          key: build#${{ github.sha }}
      - name: test
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/alis-is/eli-test:latest
          run: ./tools/test.sh
          options: -w /root/luabuild -v ${{ github.workspace }}:/root/luabuild -v ${{ github.workspace }}/toolchains:/opt/cross
  test-windows:
    if: ${{ needs.build.outputs.NEEDS_RELEASE == 'true'}}
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Use GNU tar to enable zstd for actions/cache
        run: |
          echo "Adding GNU tar to PATH"
          echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
        shell: cmd
      - name: Cache release
        uses: actions/cache@v3
        env:
          cache-name: cache-binaries
        with:
          path: ./release
          key: build#${{ github.sha }}
      - name: test
        shell: pwsh
        run: |
          .\tools\test.ps1

  publish:
    if: ${{ needs.build.outputs.NEEDS_RELEASE == 'true'}}
    runs-on: ubuntu-latest
    needs: [test-windows, test-linux, build]
    steps:
      - name: Cache release
        uses: actions/cache@v3
        env:
          cache-name: cache-binaries
        with:
          path: ./release
          key: build#${{ github.sha }}
      - name: publish
        uses: ncipollo/release-action@v1
        if: ${{ needs.build.outputs.NEEDS_RELEASE == 'true' }}
        with:
          artifacts: ./release/*
          tag: ${{ needs.build.outputs.VERSION }}
          commit: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}