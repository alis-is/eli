name: test-pr

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - main
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      NEEDS_RELEASE: ${{ steps.prep.outputs.NEEDS_RELEASE }}
      VERSION: ${{ steps.prep.outputs.VERSION }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: build
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/alis-is/eli-build:latest
          run: ./eli tools/build.lua
          options: -w /root/luabuild -v ${{ github.workspace }}:/root/luabuild -e TOOLCHAINS=x86_64-linux-musl-cross;x86_64-w64-mingw32-cross

      - name: Cache release
        uses: actions/cache@v3
        env:
          cache-name: cache-binaries
        with:
          path: ./release
          key: build#${{ github.sha }}

  test-linux:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Cache release
        uses: actions/cache@v3
        env:
          cache-name: cache-binaries
        with:
          path: ./release
          key: build#${{ github.sha }}
      - name: test
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/alis-is/eli-test:latest
          run: ./tools/test.sh
          options: -w /root/luabuild -v ${{ github.workspace }}:/root/luabuild -v ${{ github.workspace }}/toolchains:/opt/cross
  test-windows:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Use GNU tar to enable zstd for actions/cache
        run: |
          echo "Adding GNU tar to PATH"
          echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
        shell: cmd
      - name: Cache release
        uses: actions/cache@v3
        env:
          cache-name: cache-binaries
        with:
          path: ./release
          key: build#${{ github.sha }}
      - name: test
        shell: pwsh
        run: |
          .\tools\test.ps1